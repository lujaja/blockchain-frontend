{"version":3,"sources":["MessageForm.js","Message.js","MessageList.js","App.js","index.js"],"names":["MessageForm","_ref","sendMessage","message","setMessage","useState","_jsxs","onSubmit","e","preventDefault","className","children","_jsx","type","value","onChange","target","placeholder","Message","MessageList","messages","map","index","socket","io","App","setMessages","useEffect","on","prevMessages","emit","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"4LAyBeA,MAtBKC,IAAsB,IAArB,YAAEC,GAAaD,EAChC,MAAOE,EAASC,GAAcC,mBAAS,IAQvC,OACIC,eAAA,QAAMC,SAPYC,IAClBA,EAAEC,iBACFP,EAAYC,GACZC,EAAW,GAAG,EAIgBM,UAAU,eAAcC,SAAA,CAClDC,cAAA,SACIC,KAAK,OACLC,MAAOX,EACPY,SAAWP,GAAMJ,EAAWI,EAAEQ,OAAOF,OACrCG,YAAY,sBAEhBL,cAAA,UAAQC,KAAK,SAAQF,SAAC,WACnB,E,KCXAO,MANCjB,IAAA,IAAC,QAAEE,GAASF,EAAA,OACxBW,cAAA,OAAKF,UAAU,UAASC,SACpBC,cAAA,OAAKF,UAAU,kBAAiBC,SAAER,KAChC,ECKKgB,MARKlB,IAAA,IAAC,SAAEmB,GAAUnB,EAAA,OAC7BW,cAAA,OAAKF,UAAU,eAAcC,SACxBS,EAASC,KAAI,CAAClB,EAASmB,IACpBV,cAACM,EAAO,CAAaf,QAASA,GAAhBmB,MAEhB,ECFV,MAAMC,EAASC,YAAG,yBAwBHC,MAtBHA,KACR,MAAOL,EAAUM,GAAerB,mBAAS,IAEzCsB,qBAAU,KACNJ,EAAOK,GAAG,kBAAmBzB,IACzBuB,GAAaG,GAAiB,IAAIA,EAAc1B,IAAS,GAC3D,GACH,IAMH,OACIG,eAAA,OAAKI,UAAU,MAAKC,SAAA,CAChBC,cAAA,MAAAD,SAAI,6BACJC,cAACO,EAAW,CAACC,SAAUA,IACvBR,cAACZ,EAAW,CAACE,YARAC,IACjBoB,EAAOO,KAAK,cAAe3B,EAAQ,MAQ7B,ECrBd4B,IAASC,OACLpB,cAACqB,IAAMC,WAAU,CAAAvB,SACbC,cAACa,EAAG,MAERU,SAASC,eAAe,Q","file":"static/js/main.2612b55f.chunk.js","sourcesContent":["// frontend/src/MessageForm.js\r\nimport React, { useState } from 'react';\r\n\r\nconst MessageForm = ({ sendMessage }) => {\r\n    const [message, setMessage] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        sendMessage(message);\r\n        setMessage('');\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"message-form\">\r\n            <input\r\n                type=\"text\"\r\n                value={message}\r\n                onChange={(e) => setMessage(e.target.value)}\r\n                placeholder=\"Type a message...\"\r\n            />\r\n            <button type=\"submit\">Send</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default MessageForm;\r\n","// frontend/src/Message.js\r\nimport React from 'react';\r\nimport './styles.css';\r\n\r\nconst Message = ({ message }) => (\r\n    <div className=\"message\">\r\n        <div className=\"message-content\">{message}</div>\r\n    </div>\r\n);\r\n\r\nexport default Message;\r\n","// frontend/src/MessageList.js\r\nimport React from 'react';\r\nimport Message from './Message';\r\n\r\nconst MessageList = ({ messages }) => (\r\n    <div className=\"message-list\">\r\n        {messages.map((message, index) => (\r\n            <Message key={index} message={message} />\r\n        ))}\r\n    </div>\r\n);\r\n\r\nexport default MessageList;\r\n","// frontend/src/App.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport io from 'socket.io-client';\r\nimport MessageForm from './MessageForm';\r\nimport MessageList from './MessageList';\r\nimport './styles.css';\r\n\r\nconst socket = io('http://localhost:4000');\r\n\r\nconst App = () => {\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        socket.on('receiveMessage', (message) => {\r\n            setMessages((prevMessages) => [...prevMessages, message]);\r\n        });\r\n    }, []);\r\n\r\n    const sendMessage = (message) => {\r\n        socket.emit('sendMessage', message);\r\n    };\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <h1>Blockchain Messaging App</h1>\r\n            <MessageList messages={messages} />\r\n            <MessageForm sendMessage={sendMessage} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","// frontend/src/index.js\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './styles.css';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}